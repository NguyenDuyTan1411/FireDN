// <auto-generated />
using System;
using FireDN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FireDN.Migrations
{
    [DbContext(typeof(FireKLContext))]
    [Migration("20240520171725_NguoiDungMigration")]
    partial class NguoiDungMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FireDN.Data.Esp", b =>
                {
                    b.Property<int>("EspId")
                        .HasColumnType("int")
                        .HasColumnName("Esp_ID");

                    b.Property<string>("EspN")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Esp_N");

                    b.HasKey("EspId");

                    b.ToTable("ESP", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.FireD", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("FireDId")
                        .HasColumnType("int")
                        .HasColumnName("FireD_ID");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Statistic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("FireD", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.Humi", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("HumiId")
                        .HasColumnType("int")
                        .HasColumnName("Humi_ID");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Statistic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Humi", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.NguoiDung", b =>
                {
                    b.Property<int>("Iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDuser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iduser"), 1L, 1);

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Pass_word");

                    b.Property<string>("RoleUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Role_user");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Iduser")
                        .HasName("PK__NguoiDun__B6EF7F6C6B244AFB");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("SensorN")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Sensor_N");

                    b.HasKey("Id");

                    b.ToTable("Sensor", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.Smoke", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("SmokeId")
                        .HasColumnType("int")
                        .HasColumnName("Smoke_ID");

                    b.Property<string>("Statistic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Smoke", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.Temp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Statistic")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TempId")
                        .HasColumnType("int")
                        .HasColumnName("Temp_ID");

                    b.HasKey("Id");

                    b.ToTable("Temp", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.TgEsp", b =>
                {
                    b.Property<string>("Alerts")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EspId")
                        .HasColumnType("int")
                        .HasColumnName("Esp_ID");

                    b.Property<int?>("FireDId")
                        .HasColumnType("int")
                        .HasColumnName("FireD_ID");

                    b.Property<int?>("HumiId")
                        .HasColumnType("int")
                        .HasColumnName("Humi_ID");

                    b.Property<DateTime?>("Record")
                        .HasColumnType("datetime");

                    b.Property<int?>("SmokeId")
                        .HasColumnType("int")
                        .HasColumnName("Smoke_ID");

                    b.Property<int?>("TempId")
                        .HasColumnType("int")
                        .HasColumnName("Temp_ID");

                    b.HasIndex("EspId");

                    b.HasIndex("FireDId");

                    b.HasIndex("HumiId");

                    b.HasIndex("SmokeId");

                    b.HasIndex("TempId");

                    b.ToTable("TG_ESP", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.TgSensor", b =>
                {
                    b.Property<int?>("EspId")
                        .HasColumnType("int")
                        .HasColumnName("Esp_ID");

                    b.Property<int?>("TgSid")
                        .HasColumnType("int")
                        .HasColumnName("TG_SID");

                    b.HasIndex("EspId");

                    b.HasIndex("TgSid");

                    b.ToTable("TG_Sensor", (string)null);
                });

            modelBuilder.Entity("FireDN.Data.TgEsp", b =>
                {
                    b.HasOne("FireDN.Data.Esp", "Esp")
                        .WithMany()
                        .HasForeignKey("EspId")
                        .HasConstraintName("FK_ESP");

                    b.HasOne("FireDN.Data.FireD", "FireD")
                        .WithMany()
                        .HasForeignKey("FireDId")
                        .HasConstraintName("FK_FireD");

                    b.HasOne("FireDN.Data.Humi", "Humi")
                        .WithMany()
                        .HasForeignKey("HumiId")
                        .HasConstraintName("FK_Humi");

                    b.HasOne("FireDN.Data.Smoke", "Smoke")
                        .WithMany()
                        .HasForeignKey("SmokeId")
                        .HasConstraintName("FK_Smoke");

                    b.HasOne("FireDN.Data.Temp", "Temp")
                        .WithMany()
                        .HasForeignKey("TempId")
                        .HasConstraintName("FK_Temp");

                    b.Navigation("Esp");

                    b.Navigation("FireD");

                    b.Navigation("Humi");

                    b.Navigation("Smoke");

                    b.Navigation("Temp");
                });

            modelBuilder.Entity("FireDN.Data.TgSensor", b =>
                {
                    b.HasOne("FireDN.Data.Esp", "Esp")
                        .WithMany()
                        .HasForeignKey("EspId")
                        .HasConstraintName("FK_esp_id");

                    b.HasOne("FireDN.Data.Sensor", "TgS")
                        .WithMany()
                        .HasForeignKey("TgSid")
                        .HasConstraintName("FK_TG_SID");

                    b.Navigation("Esp");

                    b.Navigation("TgS");
                });
#pragma warning restore 612, 618
        }
    }
}
